/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DotoliStaking, DotoliStakingInterface } from "../DotoliStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrewStake",
    type: "event",
  },
  {
    inputs: [],
    name: "REWARD_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_lastUpdateTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_rewardPerTokenStored",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s_totalStakedSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "s_userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopRewardAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b50604051610cd9380380610cd983398101604081905261003491610086565b6001600055600380546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100b8565b80516001600160a01b038116811461008157600080fd5b919050565b60008060408385031215610098578182fd5b6100a18361006a565b91506100af6020840161006a565b90509250929050565b610c12806100c76000396000f3fe608060405234801561001057600080fd5b50600436106101355760003560e01c80636aa0838f116100b2578063ae169a5011610081578063cd3daf9d11610066578063cd3daf9d146102b7578063d0f16cbe146102bf578063f245ace4146102d157600080fd5b8063ae169a5014610284578063bea081511461029757600080fd5b80636aa0838f14610228578063a694fc3a14610231578063ab32eb6914610244578063adca9b721461026457600080fd5b8063304ac91b116101095780634fbdea4d116100ee5780634fbdea4d146102025780635997bb371461020b57806366a78e6c1461021657600080fd5b8063304ac91b146101c3578063399080ec146101cc57600080fd5b80628cc2621461013a5780630bd21c561461016057806313d5fd4d146101a55780632e1a7d4d146101ae575b600080fd5b61014d610148366004610a95565b6102f1565b6040519081526020015b60405180910390f35b6002546101809073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610157565b61014d60085481565b6101c16101bc366004610af0565b6103a1565b005b61014d60055481565b61014d6101da366004610a95565b73ffffffffffffffffffffffffffffffffffffffff1660009081526009602052604090205490565b61014d60015481565b61014d6301312d0081565b61014d6a08459523f4b7fbf164000081565b61014d60045481565b6101c161023f366004610af0565b61062d565b61014d610252366004610a95565b60096020526000908152604090205481565b6003546101809073ffffffffffffffffffffffffffffffffffffffff1681565b6101c1610292366004610af0565b610826565b61014d6102a5366004610a95565b60076020526000908152604090205481565b61014d610a33565b61014d6a084595161401484a00000081565b61014d6102df366004610a95565b60066020526000908152604090205481565b60006a084595161401484a0000006001541061030f57506000919050565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600760209081526040808320546006909252909120546127109061034d610a33565b6103579190610b96565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600960205260409020546103879190610b59565b6103919190610b20565b61039b9190610b08565b92915050565b336103aa610a33565b600555426004556103ba816102f1565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600760209081526040808320939093556005546006909152918120919091555460021415610465576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556008548211156104d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f4c494d4954000000000000000000000000000000000000000000000000000000604482015260640161045c565b81600860008282546104e89190610b96565b9091555050336000908152600960205260408120805484929061050c908490610b96565b9091555050604051829033907f4cb6da433ea55f6e302b7bdbfeed740816a42301cde7f5bac5dff2b34037637490600090a36003546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905260009173ffffffffffffffffffffffffffffffffffffffff169063a9059cbb906044015b602060405180830381600087803b1580156105b257600080fd5b505af11580156105c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ea9190610ad0565b905080610623576040517f90b8ec1800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050600160005550565b33610636610a33565b60055542600455610646816102f1565b73ffffffffffffffffffffffffffffffffffffffff821660009081526007602090815260408083209390935560055460069091529181209190915554600214156106ec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161045c565b60026000558161075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045c9060208082526004908201527f5a45524f00000000000000000000000000000000000000000000000000000000604082015260600190565b816008600082825461076c9190610b08565b90915550503360009081526009602052604081208054849290610790908490610b08565b9091555050604051829033907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d90600090a36003546040517f23b872dd0000000000000000000000000000000000000000000000000000000081523360048201523060248201526044810184905260009173ffffffffffffffffffffffffffffffffffffffff16906323b872dd90606401610598565b3361082f610a33565b6005554260045561083f816102f1565b73ffffffffffffffffffffffffffffffffffffffff821660009081526007602090815260408083209390935560055460069091529181209190915554600214156108e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161045c565b6002600055600154610902906a08459523f4b7fbf1640000610b96565b82111561096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f4c494d4954000000000000000000000000000000000000000000000000000000604482015260640161045c565b336000908152600760205260408120805484929061098a908490610b96565b9250508190555081600160008282546109a39190610b08565b9091555050604051829033907ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe90600090a36002546040517fa9059cbb0000000000000000000000000000000000000000000000000000000081523360048201526024810184905260009173ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401610598565b600060085460001415610a47575060055490565b6008546301312d0060045442610a5d9190610b96565b610a679190610b59565b610a7990670de0b6b3a7640000610b59565b610a839190610b20565b600554610a909190610b08565b905090565b600060208284031215610aa6578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610ac9578182fd5b9392505050565b600060208284031215610ae1578081fd5b81518015158114610ac9578182fd5b600060208284031215610b01578081fd5b5035919050565b60008219821115610b1b57610b1b610bad565b500190565b600082610b54577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b9157610b91610bad565b500290565b600082821015610ba857610ba8610bad565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220c3a9bbfeb86d478d406858258ee3a5b6d0207bcab586cfe430fe2db2d4061f8664736f6c63430008040033";

export class DotoliStaking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    stakingToken: string,
    rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DotoliStaking> {
    return super.deploy(
      stakingToken,
      rewardsToken,
      overrides || {}
    ) as Promise<DotoliStaking>;
  }
  getDeployTransaction(
    stakingToken: string,
    rewardsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      stakingToken,
      rewardsToken,
      overrides || {}
    );
  }
  attach(address: string): DotoliStaking {
    return super.attach(address) as DotoliStaking;
  }
  connect(signer: Signer): DotoliStaking__factory {
    return super.connect(signer) as DotoliStaking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DotoliStakingInterface {
    return new utils.Interface(_abi) as DotoliStakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DotoliStaking {
    return new Contract(address, _abi, signerOrProvider) as DotoliStaking;
  }
}
